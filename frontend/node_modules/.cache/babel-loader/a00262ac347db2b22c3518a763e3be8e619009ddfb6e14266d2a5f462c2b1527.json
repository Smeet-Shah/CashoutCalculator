{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smeet\\\\Side Projects\\\\CashoutCalc\\\\frontend\\\\src\\\\components\\\\BettingForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, FormControl, FormControlLabel, Grid, InputAdornment, MenuItem, Radio, RadioGroup, TextField, Typography, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, CircularProgress, Card, CardContent, Divider, Chip, Tabs, Tab, Avatar, Tooltip, Accordion, AccordionSummary, AccordionDetails } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport SportsIcon from '@mui/icons-material/Sports';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport SportsSoccerIcon from '@mui/icons-material/SportsSoccer';\nimport SportsBasketballIcon from '@mui/icons-material/SportsBasketball';\nimport SportsFootballIcon from '@mui/icons-material/SportsFootball';\nimport SportsBaseballIcon from '@mui/icons-material/SportsBaseball';\nimport SportsHockeyIcon from '@mui/icons-material/SportsHockey';\nimport PersonIcon from '@mui/icons-material/Person';\nimport CalculateIcon from '@mui/icons-material/Calculate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialLeg = {\n  team: '',\n  originalOdds: '',\n  currentOdds: '',\n  status: 'Pending'\n};\n\n// Format American odds with + sign\nconst formatOdds = odds => {\n  if (!odds) return '';\n  const numOdds = parseInt(odds);\n  return numOdds > 0 ? `+${numOdds}` : `${numOdds}`;\n};\nconst BettingForm = ({\n  onSubmit,\n  fetchOdds,\n  fetchEvents,\n  loading\n}) => {\n  _s();\n  var _playersMap$selectedP;\n  const [formData, setFormData] = useState({\n    betType: 'Single',\n    stake: '',\n    legs: [{\n      ...initialLeg\n    }],\n    cashoutOffer: ''\n  });\n  const [oddsDialogOpen, setOddsDialogOpen] = useState(false);\n  const [currentLegIndex, setCurrentLegIndex] = useState(0);\n  const [oddsParams, setOddsParams] = useState({\n    sport: 'americanfootball_nfl',\n    markets: 'h2h',\n    team: ''\n  });\n  const [fetchingOdds, setFetchingOdds] = useState(false);\n  const [fetchedEvents, setFetchedEvents] = useState([]);\n  const [fetchedPlayerProps, setFetchedPlayerProps] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [activeTab, setActiveTab] = useState(0);\n  const [expandedEvent, setExpandedEvent] = useState(null);\n  const [selectedEvent, setSelectedEvent] = useState(null);\n  const [selectedPlayerMarket, setSelectedPlayerMarket] = useState('player_points');\n  const [playersMap, setPlayersMap] = useState({});\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // For numeric fields, ensure we have valid values\n    if (name === 'stake' || name === 'cashoutOffer') {\n      // Ensure it's a valid number\n      if (value && isNaN(parseFloat(value))) {\n        return; // Don't update if it's not a valid number\n      }\n    }\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleLegChange = (index, field, value) => {\n    const updatedLegs = [...formData.legs];\n\n    // For odds fields, ensure we have valid numeric values\n    if (field === 'originalOdds' || field === 'currentOdds') {\n      // Remove any + sign for storage (but we'll display it)\n      value = value.toString().replace(/^\\+/, '');\n\n      // Ensure it's a valid number\n      if (value && isNaN(parseInt(value))) {\n        return; // Don't update if it's not a valid number\n      }\n    }\n    updatedLegs[index] = {\n      ...updatedLegs[index],\n      [field]: value\n    };\n\n    // If original odds are set and current odds are not, set current = original\n    if (field === 'originalOdds' && !updatedLegs[index].currentOdds) {\n      updatedLegs[index].currentOdds = value;\n    }\n    setFormData(prev => ({\n      ...prev,\n      legs: updatedLegs\n    }));\n  };\n  const addLeg = () => {\n    setFormData(prev => ({\n      ...prev,\n      betType: 'Parlay',\n      // Automatically switch to parlay if adding legs\n      legs: [...prev.legs, {\n        ...initialLeg\n      }]\n    }));\n  };\n  const removeLeg = index => {\n    const updatedLegs = [...formData.legs];\n    updatedLegs.splice(index, 1);\n    setFormData(prev => ({\n      ...prev,\n      legs: updatedLegs\n    }));\n\n    // If only one leg is left, switch back to single bet type\n    if (updatedLegs.length === 1) {\n      setFormData(prev => ({\n        ...prev,\n        betType: 'Single'\n      }));\n    }\n  };\n  const openOddsDialog = index => {\n    setCurrentLegIndex(index);\n    setOddsParams({\n      sport: 'americanfootball_nfl',\n      markets: 'h2h',\n      team: formData.legs[index].team\n    });\n    setFetchedEvents([]);\n    setFetchedPlayerProps([]);\n    setSelectedEvent(null);\n    setSelectedPlayerMarket('player_points');\n    setErrorMessage('');\n    setActiveTab(0);\n    setOddsDialogOpen(true);\n  };\n  const handleOddsParamsChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setOddsParams(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const fetchCurrentOdds = async () => {\n    setFetchingOdds(true);\n    setErrorMessage('');\n    try {\n      if (activeTab === 0) {\n        // Fetch regular odds\n        const events = await fetchOdds(oddsParams);\n        setFetchedEvents(events);\n        if (events.length === 0) {\n          setErrorMessage('No events found for the specified parameters.');\n        }\n      } else if (activeTab === 1) {\n        // For player props, first fetch available events\n        const events = await fetchEvents({\n          sport: oddsParams.sport\n        });\n        setFetchedEvents(events);\n        if (events.length === 0) {\n          setErrorMessage('No events found for the specified sport.');\n        }\n      }\n    } catch (error) {\n      setErrorMessage(error.message || 'Failed to fetch odds. Please try again.');\n    } finally {\n      setFetchingOdds(false);\n    }\n  };\n  const fetchPlayerProps = async eventId => {\n    setFetchingOdds(true);\n    setErrorMessage('');\n    setSelectedPlayer(null);\n    setSelectedEvent(eventId);\n    try {\n      const playerPropsParams = {\n        sport: oddsParams.sport,\n        eventId: eventId,\n        markets: selectedPlayerMarket\n      };\n      const response = await fetchOdds(playerPropsParams);\n\n      // The response is a single event with bookmakers\n      if (response && typeof response === 'object') {\n        setFetchedPlayerProps([response]);\n\n        // Extract players from the response\n        const playerData = {};\n\n        // Go through each bookmaker\n        if (response.bookmakers && response.bookmakers.length > 0) {\n          response.bookmakers.forEach(bookmaker => {\n            if (bookmaker.markets && bookmaker.markets.length > 0) {\n              bookmaker.markets.forEach(market => {\n                if (market.key === selectedPlayerMarket && market.outcomes) {\n                  market.outcomes.forEach(outcome => {\n                    // The player name is in the description field\n                    const playerName = outcome.description;\n                    if (!playerData[playerName]) {\n                      playerData[playerName] = [];\n                    }\n                    playerData[playerName].push({\n                      bookmaker: bookmaker.title,\n                      bookmakerId: bookmaker.key,\n                      market: market.key,\n                      name: outcome.name,\n                      point: outcome.point,\n                      price: outcome.price\n                    });\n                  });\n                }\n              });\n            }\n          });\n          setPlayersMap(playerData);\n          if (Object.keys(playerData).length === 0) {\n            setErrorMessage('No player props found for this event and market.');\n          }\n        } else {\n          setErrorMessage('No bookmakers available for this event.');\n        }\n      } else {\n        setErrorMessage('Invalid response format from the API.');\n      }\n    } catch (error) {\n      console.error('Error fetching player props:', error);\n      setErrorMessage(error.message || 'Failed to fetch player props. Please try again.');\n    } finally {\n      setFetchingOdds(false);\n    }\n  };\n  const handlePlayerMarketChange = e => {\n    setSelectedPlayerMarket(e.target.value);\n    if (selectedEvent) {\n      fetchPlayerProps(selectedEvent);\n    }\n  };\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n    setFetchedEvents([]);\n    setFetchedPlayerProps([]);\n    setSelectedEvent(null);\n    setErrorMessage('');\n  };\n  const selectOdds = (bookmaker, marketKey, outcome) => {\n    // Update the leg with the selected odds\n    const updatedLegs = [...formData.legs];\n    updatedLegs[currentLegIndex] = {\n      ...updatedLegs[currentLegIndex],\n      currentOdds: outcome.price,\n      team: `${outcome.name} (${marketKey === 'h2h' ? 'ML' : marketKey})`\n    };\n    setFormData(prev => ({\n      ...prev,\n      legs: updatedLegs\n    }));\n    setOddsDialogOpen(false);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Validation\n    if (!formData.stake || formData.stake <= 0) {\n      setErrorMessage('Please enter a valid stake amount.');\n      return;\n    }\n    if (!formData.cashoutOffer || formData.cashoutOffer <= 0) {\n      setErrorMessage('Please enter a valid cashout offer amount.');\n      return;\n    }\n    for (const leg of formData.legs) {\n      if (!leg.team) {\n        setErrorMessage('Please enter a team/side for all legs.');\n        return;\n      }\n      if (!leg.originalOdds) {\n        setErrorMessage('Please enter original odds for all legs.');\n        return;\n      }\n      if (leg.status === 'Pending' && !leg.currentOdds) {\n        setErrorMessage('Please enter current odds for all pending legs.');\n        return;\n      }\n    }\n    setErrorMessage('');\n    onSubmit(formData);\n  };\n  const handleAccordionChange = eventId => (event, isExpanded) => {\n    setExpandedEvent(isExpanded ? eventId : null);\n  };\n  const getSportIcon = sport => {\n    if (sport.includes('football')) return /*#__PURE__*/_jsxDEV(SportsFootballIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 44\n    }, this);\n    if (sport.includes('basketball')) return /*#__PURE__*/_jsxDEV(SportsBasketballIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 46\n    }, this);\n    if (sport.includes('baseball')) return /*#__PURE__*/_jsxDEV(SportsBaseballIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 44\n    }, this);\n    if (sport.includes('hockey')) return /*#__PURE__*/_jsxDEV(SportsHockeyIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 42\n    }, this);\n    if (sport.includes('soccer')) return /*#__PURE__*/_jsxDEV(SportsSoccerIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 42\n    }, this);\n    return /*#__PURE__*/_jsxDEV(SportsIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 12\n    }, this);\n  };\n\n  // Sport options with icons\n  const sportOptions = [{\n    value: 'americanfootball_nfl',\n    label: 'NFL',\n    icon: /*#__PURE__*/_jsxDEV(SportsFootballIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 58\n    }, this)\n  }, {\n    value: 'americanfootball_ncaaf',\n    label: 'NCAAF',\n    icon: /*#__PURE__*/_jsxDEV(SportsFootballIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 62\n    }, this)\n  }, {\n    value: 'baseball_mlb',\n    label: 'MLB',\n    icon: /*#__PURE__*/_jsxDEV(SportsBaseballIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 50\n    }, this)\n  }, {\n    value: 'basketball_nba',\n    label: 'NBA',\n    icon: /*#__PURE__*/_jsxDEV(SportsBasketballIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 52\n    }, this)\n  }, {\n    value: 'basketball_ncaab',\n    label: 'NCAAB',\n    icon: /*#__PURE__*/_jsxDEV(SportsBasketballIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 56\n    }, this)\n  }, {\n    value: 'icehockey_nhl',\n    label: 'NHL',\n    icon: /*#__PURE__*/_jsxDEV(SportsHockeyIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 51\n    }, this)\n  }, {\n    value: 'soccer_epl',\n    label: 'EPL',\n    icon: /*#__PURE__*/_jsxDEV(SportsSoccerIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 48\n    }, this)\n  }, {\n    value: 'soccer_usa_mls',\n    label: 'MLS',\n    icon: /*#__PURE__*/_jsxDEV(SportsSoccerIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 52\n    }, this)\n  }];\n\n  // Market options by category\n  const marketOptions = {\n    standard: [{\n      value: 'h2h',\n      label: 'Moneyline'\n    }, {\n      value: 'spreads',\n      label: 'Spreads'\n    }, {\n      value: 'totals',\n      label: 'Totals (Over/Under)'\n    }, {\n      value: 'alternate_spreads',\n      label: 'Alternate Spreads'\n    }, {\n      value: 'alternate_totals',\n      label: 'Alternate Totals'\n    }, {\n      value: 'team_totals',\n      label: 'Team Totals'\n    }, {\n      value: 'alternate_team_totals',\n      label: 'Alternate Team Totals'\n    }, {\n      value: 'outrights',\n      label: 'Outrights'\n    }, {\n      value: 'h2h_3_way',\n      label: '3-Way Moneyline'\n    }, {\n      value: 'btts',\n      label: 'Both Teams to Score'\n    }, {\n      value: 'draw_no_bet',\n      label: 'Draw No Bet'\n    }],\n    basketball: [{\n      value: 'player_points',\n      label: 'Player Points'\n    }, {\n      value: 'player_rebounds',\n      label: 'Player Rebounds'\n    }, {\n      value: 'player_assists',\n      label: 'Player Assists'\n    }, {\n      value: 'player_threes',\n      label: 'Player Threes'\n    }, {\n      value: 'player_blocks',\n      label: 'Player Blocks'\n    }, {\n      value: 'player_steals',\n      label: 'Player Steals'\n    }, {\n      value: 'player_points_rebounds_assists',\n      label: 'Player PRA'\n    }, {\n      value: 'player_double_double',\n      label: 'Double Double'\n    }, {\n      value: 'player_triple_double',\n      label: 'Triple Double'\n    }],\n    baseball: [{\n      value: 'batter_home_runs',\n      label: 'Batter HRs'\n    }, {\n      value: 'batter_hits',\n      label: 'Batter Hits'\n    }, {\n      value: 'batter_total_bases',\n      label: 'Batter Total Bases'\n    }, {\n      value: 'batter_rbis',\n      label: 'Batter RBIs'\n    }, {\n      value: 'batter_runs_scored',\n      label: 'Batter Runs'\n    }, {\n      value: 'pitcher_strikeouts',\n      label: 'Pitcher Strikeouts'\n    }, {\n      value: 'pitcher_record_a_win',\n      label: 'Pitcher Win'\n    }]\n  };\n\n  // Function to get available markets based on selected sport\n  const getAvailableMarkets = () => {\n    const availableMarkets = [...marketOptions.standard];\n    if (oddsParams.sport.includes('basketball')) {\n      availableMarkets.push(...marketOptions.basketball);\n    }\n    if (oddsParams.sport.includes('baseball')) {\n      availableMarkets.push(...marketOptions.baseball);\n    }\n    return availableMarkets;\n  };\n\n  // Handle player selection\n  const handlePlayerSelect = playerName => {\n    setSelectedPlayer(playerName);\n  };\n\n  // Select player prop odds\n  const selectPlayerOdds = (bookmakerKey, market, playerName, outcome) => {\n    // Update the leg with the selected player prop odds\n    const updatedLegs = [...formData.legs];\n    updatedLegs[currentLegIndex] = {\n      ...updatedLegs[currentLegIndex],\n      currentOdds: outcome.price,\n      team: `${playerName} ${outcome.name} ${outcome.point} (${market.replace('_', ' ')})`\n    };\n    setFormData(prev => ({\n      ...prev,\n      legs: updatedLegs\n    }));\n    setOddsDialogOpen(false);\n  };\n\n  // Reset player selection when going back to games\n  const resetPlayerSelection = () => {\n    setSelectedEvent(null);\n    setFetchedPlayerProps([]);\n    setPlayersMap({});\n    setSelectedPlayer(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    noValidate: true,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      sx: {\n        color: 'primary.main',\n        fontWeight: 'bold'\n      },\n      children: \"Bet Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                gutterBottom: true,\n                children: \"Bet Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n                row: true,\n                name: \"betType\",\n                value: formData.betType,\n                onChange: handleInputChange,\n                children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"Single\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    color: \"secondary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 30\n                  }, this),\n                  label: \"Single\",\n                  disabled: formData.legs.length > 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 450,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  value: \"Parlay\",\n                  control: /*#__PURE__*/_jsxDEV(Radio, {\n                    color: \"secondary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 30\n                  }, this),\n                  label: \"Parlay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              label: \"Stake\",\n              name: \"stake\",\n              value: formData.stake,\n              onChange: handleInputChange,\n              fullWidth: true,\n              type: \"number\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 35\n                }, this),\n                inputProps: {\n                  min: 0,\n                  step: 0.01\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        mt: 4,\n        mb: 2,\n        color: 'primary.dark',\n        fontWeight: 'bold'\n      },\n      children: \"Bet Legs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this), formData.legs.map((leg, index) => /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      sx: {\n        mb: 3,\n        borderColor: leg.status === 'Hit / Won' ? 'success.light' : leg.status === 'Lost' ? 'error.light' : 'primary.light'\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                sx: {\n                  fontWeight: 'bold'\n                },\n                children: [\"Leg \", index + 1, leg.status === 'Hit / Won' && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Won\",\n                  color: \"success\",\n                  size: \"small\",\n                  sx: {\n                    ml: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 23\n                }, this), leg.status === 'Lost' && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Lost\",\n                  color: \"error\",\n                  size: \"small\",\n                  sx: {\n                    ml: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 23\n                }, this), leg.status === 'Pending' && /*#__PURE__*/_jsxDEV(Chip, {\n                  label: \"Pending\",\n                  color: \"primary\",\n                  size: \"small\",\n                  sx: {\n                    ml: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 522,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 503,\n                columnNumber: 19\n              }, this), formData.legs.length > 1 && /*#__PURE__*/_jsxDEV(IconButton, {\n                size: \"small\",\n                onClick: () => removeLeg(index),\n                color: \"error\",\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              label: \"Team / Selection\",\n              value: leg.team,\n              onChange: e => handleLegChange(index, 'team', e.target.value),\n              fullWidth: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              select: true,\n              label: \"Status\",\n              value: leg.status,\n              onChange: e => handleLegChange(index, 'status', e.target.value),\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Pending\",\n                children: \"Pending\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Hit / Won\",\n                children: \"Hit / Won\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Lost\",\n                children: \"Lost\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 555,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              label: \"Original Odds\",\n              value: leg.originalOdds,\n              onChange: e => handleLegChange(index, 'originalOdds', e.target.value),\n              InputProps: {\n                startAdornment: leg.originalOdds && parseInt(leg.originalOdds) > 0 ? /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 23\n                }, this) : null,\n                inputProps: {\n                  step: 1\n                }\n              },\n              fullWidth: true,\n              type: \"number\",\n              helperText: \"Enter in American format (e.g. +200, -150)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 15\n          }, this), leg.status === 'Pending' && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              label: \"Current Odds\",\n              value: leg.currentOdds,\n              onChange: e => handleLegChange(index, 'currentOdds', e.target.value),\n              InputProps: {\n                startAdornment: leg.currentOdds && parseInt(leg.currentOdds) > 0 ? /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 25\n                }, this) : null,\n                endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"end\",\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Fetch current odds\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: () => openOddsDialog(index),\n                      edge: \"end\",\n                      color: \"primary\",\n                      children: /*#__PURE__*/_jsxDEV(SportsIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 605,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 600,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 599,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 25\n                }, this),\n                inputProps: {\n                  step: 1\n                }\n              },\n              fullWidth: true,\n              type: \"number\",\n              helperText: \"Enter manually or fetch from The Odds API\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 20\n      }, this),\n      onClick: addLeg,\n      sx: {\n        mb: 3\n      },\n      variant: \"outlined\",\n      color: \"secondary\",\n      children: \"Add Leg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      sx: {\n        mt: 4,\n        color: 'primary.dark',\n        fontWeight: 'bold'\n      },\n      children: \"Cashout Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              label: \"Cashout Offer\",\n              name: \"cashoutOffer\",\n              value: formData.cashoutOffer,\n              onChange: handleInputChange,\n              fullWidth: true,\n              type: \"number\",\n              InputProps: {\n                startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                  position: \"start\",\n                  children: \"$\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 650,\n                  columnNumber: 35\n                }, this),\n                inputProps: {\n                  min: 0,\n                  step: 0.01\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 637,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      sx: {\n        mt: 2,\n        mb: 2,\n        p: 2,\n        bgcolor: '#ffebee',\n        borderRadius: 1\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"large\",\n      sx: {\n        mt: 2,\n        px: 4,\n        py: 1\n      },\n      disabled: loading,\n      startIcon: /*#__PURE__*/_jsxDEV(CalculateIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 20\n      }, this),\n      children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 20\n      }, this) : 'Calculate EV'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: oddsDialogOpen,\n      onClose: () => setOddsDialogOpen(false),\n      maxWidth: \"lg\",\n      fullWidth: true,\n      PaperProps: {\n        sx: {\n          borderRadius: 2\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        sx: {\n          pb: 1,\n          pt: 2,\n          fontWeight: 'bold'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          children: [getSportIcon(oddsParams.sport), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              ml: 1\n            },\n            children: \"Fetch Current Odds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: activeTab,\n          onChange: handleTabChange,\n          variant: \"scrollable\",\n          scrollButtons: \"auto\",\n          sx: {\n            mb: 2,\n            borderBottom: 1,\n            borderColor: 'divider'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(SportsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 24\n            }, this),\n            label: \"Game Odds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab, {\n            icon: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 21\n            }, this),\n            label: \"Player Props\",\n            disabled: !['basketball_nba', 'basketball_ncaab', 'baseball_mlb'].includes(oddsParams.sport)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          hidden: activeTab !== 0,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                label: \"Sport\",\n                name: \"sport\",\n                value: oddsParams.sport,\n                onChange: handleOddsParamsChange,\n                fullWidth: true,\n                SelectProps: {\n                  renderValue: value => {\n                    const option = sportOptions.find(opt => opt.value === value);\n                    return /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                        sx: {\n                          width: 24,\n                          height: 24,\n                          mr: 1,\n                          bgcolor: 'primary.main'\n                        },\n                        children: option === null || option === void 0 ? void 0 : option.icon\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 727,\n                        columnNumber: 27\n                      }, this), option === null || option === void 0 ? void 0 : option.label]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 726,\n                      columnNumber: 25\n                    }, this);\n                  }\n                },\n                children: sportOptions.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                      sx: {\n                        width: 24,\n                        height: 24,\n                        mr: 1,\n                        bgcolor: 'primary.main'\n                      },\n                      children: option.icon\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 739,\n                      columnNumber: 25\n                    }, this), option.label]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 738,\n                    columnNumber: 23\n                  }, this)\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 737,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                label: \"Market\",\n                name: \"markets\",\n                value: oddsParams.markets,\n                onChange: handleOddsParamsChange,\n                fullWidth: true,\n                children: getAvailableMarkets().filter(market => !market.value.includes('player_')).map(market => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: market.value,\n                  children: market.label\n                }, market.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 759,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 750,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Team (Optional)\",\n                name: \"team\",\n                value: oddsParams.team,\n                onChange: handleOddsParamsChange,\n                fullWidth: true,\n                helperText: \"Leave blank to see all events\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: fetchCurrentOdds,\n            disabled: fetchingOdds,\n            color: \"secondary\",\n            sx: {\n              mt: 3\n            },\n            children: fetchingOdds ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 31\n            }, this) : 'Fetch Odds'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            sx: {\n              mt: 2\n            },\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 15\n          }, this), fetchedEvents.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              sx: {\n                fontWeight: 'bold',\n                color: 'primary.dark'\n              },\n              children: [\"Available Events (\", fetchedEvents.length, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 17\n            }, this), fetchedEvents.map((event, eventIndex) => /*#__PURE__*/_jsxDEV(Accordion, {\n              expanded: expandedEvent === eventIndex,\n              onChange: handleAccordionChange(eventIndex),\n              sx: {\n                mb: 2,\n                boxShadow: 'none',\n                border: '1px solid',\n                borderColor: 'divider'\n              },\n              children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n                expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 807,\n                  columnNumber: 51\n                }, this),\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 8,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      sx: {\n                        fontWeight: 'medium'\n                      },\n                      children: [event.home_team, \" vs \", event.away_team]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 810,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 809,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 4,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: new Date(event.commence_time).toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 815,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 814,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 808,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n                children: [/*#__PURE__*/_jsxDEV(Divider, {\n                  sx: {\n                    mb: 2\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 822,\n                  columnNumber: 23\n                }, this), event.bookmakers && event.bookmakers.map((bookmaker, bookmakerIndex) => /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 3\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle2\",\n                    sx: {\n                      mb: 1,\n                      fontWeight: 'bold'\n                    },\n                    children: bookmaker.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 826,\n                    columnNumber: 27\n                  }, this), bookmaker.markets && bookmaker.markets.map((market, marketIndex) => /*#__PURE__*/_jsxDEV(Card, {\n                    variant: \"outlined\",\n                    sx: {\n                      mb: 2,\n                      borderColor: 'primary.light'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(CardContent, {\n                      sx: {\n                        p: 2,\n                        '&:last-child': {\n                          pb: 2\n                        }\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        gutterBottom: true,\n                        sx: {\n                          fontWeight: 'medium',\n                          color: 'primary.main'\n                        },\n                        children: market.key === 'h2h' ? 'Moneyline' : market.key === 'spreads' ? 'Spread' : market.key === 'totals' ? 'Total (Over/Under)' : market.key\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 833,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        container: true,\n                        spacing: 1,\n                        children: market.outcomes.map((outcome, outcomeIndex) => /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          children: /*#__PURE__*/_jsxDEV(Button, {\n                            variant: \"outlined\",\n                            size: \"small\",\n                            onClick: () => selectOdds(bookmaker.key, market.key, outcome),\n                            sx: {\n                              borderRadius: '20px',\n                              textTransform: 'none',\n                              fontWeight: 'medium'\n                            },\n                            children: [outcome.name, outcome.point !== undefined ? ` ${outcome.point > 0 ? '+' : ''}${outcome.point}` : '', \":\", ' ', formatOdds(outcome.price)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 843,\n                            columnNumber: 39\n                          }, this)\n                        }, outcomeIndex, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 842,\n                          columnNumber: 37\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 840,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 832,\n                      columnNumber: 31\n                    }, this)\n                  }, marketIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 831,\n                    columnNumber: 29\n                  }, this))]\n                }, bookmakerIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 825,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 21\n              }, this)]\n            }, eventIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          hidden: activeTab !== 1,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                label: \"Sport\",\n                name: \"sport\",\n                value: oddsParams.sport,\n                onChange: handleOddsParamsChange,\n                fullWidth: true,\n                SelectProps: {\n                  renderValue: value => {\n                    const option = sportOptions.find(opt => opt.value === value);\n                    return /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        alignItems: 'center'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                        sx: {\n                          width: 24,\n                          height: 24,\n                          mr: 1,\n                          bgcolor: 'primary.main'\n                        },\n                        children: option === null || option === void 0 ? void 0 : option.icon\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 887,\n                        columnNumber: 27\n                      }, this), option === null || option === void 0 ? void 0 : option.label]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 886,\n                      columnNumber: 25\n                    }, this);\n                  }\n                },\n                children: sportOptions.filter(opt => ['basketball_nba', 'basketball_ncaab', 'baseball_mlb'].includes(opt.value)).map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: option.value,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      alignItems: 'center'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                      sx: {\n                        width: 24,\n                        height: 24,\n                        mr: 1,\n                        bgcolor: 'primary.main'\n                      },\n                      children: option.icon\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 901,\n                      columnNumber: 25\n                    }, this), option.label]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 900,\n                    columnNumber: 23\n                  }, this)\n                }, option.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 899,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 875,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 874,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                select: true,\n                label: \"Player Prop Market\",\n                value: selectedPlayerMarket,\n                onChange: handlePlayerMarketChange,\n                fullWidth: true,\n                disabled: !selectedEvent,\n                children: getAvailableMarkets().filter(market => market.value.includes('player_')).map(market => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: market.value,\n                  children: market.label\n                }, market.value, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 921,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 912,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 911,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: fetchCurrentOdds,\n            disabled: fetchingOdds || selectedEvent !== null,\n            color: \"secondary\",\n            sx: {\n              mt: 3\n            },\n            children: fetchingOdds ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 31\n            }, this) : 'Fetch Games'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 929,\n            columnNumber: 13\n          }, this), selectedEvent && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: resetPlayerSelection,\n            sx: {\n              mt: 3,\n              ml: 2\n            },\n            children: \"Back to Games\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 15\n          }, this), errorMessage && /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            sx: {\n              mt: 2\n            },\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 15\n          }, this), fetchedEvents.length > 0 && !selectedEvent && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              sx: {\n                fontWeight: 'bold',\n                color: 'primary.dark'\n              },\n              children: \"Select a Game to View Player Props\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 957,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: fetchedEvents.map(event => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  variant: \"outlined\",\n                  sx: {\n                    cursor: 'pointer',\n                    '&:hover': {\n                      borderColor: 'primary.main',\n                      boxShadow: 1\n                    }\n                  },\n                  onClick: () => fetchPlayerProps(event.id),\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      sx: {\n                        fontWeight: 'bold'\n                      },\n                      children: [event.home_team, \" vs \", event.away_team]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 973,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.secondary\",\n                      children: new Date(event.commence_time).toLocaleString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 976,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 972,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 964,\n                  columnNumber: 23\n                }, this)\n              }, event.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 963,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 961,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 956,\n            columnNumber: 15\n          }, this), fetchedPlayerProps.length > 0 && selectedEvent && !selectedPlayer && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              sx: {\n                fontWeight: 'bold',\n                color: 'primary.dark'\n              },\n              children: [\"Select a Player for \", selectedPlayerMarket.replace('_', ' ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 989,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: Object.keys(playersMap).map((playerName, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  variant: \"outlined\",\n                  sx: {\n                    cursor: 'pointer',\n                    '&:hover': {\n                      borderColor: 'primary.main',\n                      boxShadow: 1\n                    }\n                  },\n                  onClick: () => handlePlayerSelect(playerName),\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      sx: {\n                        fontWeight: 'bold',\n                        textAlign: 'center'\n                      },\n                      children: playerName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1005,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1004,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 996,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 995,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 988,\n            columnNumber: 15\n          }, this), selectedPlayer && selectedEvent && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  fontWeight: 'bold',\n                  color: 'primary.dark'\n                },\n                children: [selectedPlayer, \" - \", selectedPlayerMarket.replace('_', ' ')]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1019,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                size: \"small\",\n                onClick: () => setSelectedPlayer(null),\n                children: \"Back to Players\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1023,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1018,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 2,\n              children: (_playersMap$selectedP = playersMap[selectedPlayer]) === null || _playersMap$selectedP === void 0 ? void 0 : _playersMap$selectedP.map((prop, index) => /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 6,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  variant: \"outlined\",\n                  children: /*#__PURE__*/_jsxDEV(CardContent, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      sx: {\n                        mb: 1,\n                        fontWeight: 'bold'\n                      },\n                      children: prop.bookmaker\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1037,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        display: 'flex',\n                        justifyContent: 'center',\n                        mt: 2\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"outlined\",\n                        onClick: () => selectPlayerOdds(prop.bookmakerId, selectedPlayerMarket, selectedPlayer, {\n                          name: prop.name,\n                          point: prop.point,\n                          price: prop.price\n                        }),\n                        sx: {\n                          mr: 2,\n                          borderRadius: '20px',\n                          textTransform: 'none',\n                          fontWeight: 'medium'\n                        },\n                        children: [prop.name, \" \", prop.point, \": \", formatOdds(prop.price)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1042,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1041,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1036,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1035,\n                  columnNumber: 23\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1034,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1032,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 15\n          }, this), selectedEvent && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: resetPlayerSelection,\n            sx: {\n              mt: 3,\n              ml: 2\n            },\n            children: \"Back to Games\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 696,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        sx: {\n          p: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOddsDialogOpen(false),\n          variant: \"outlined\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 430,\n    columnNumber: 5\n  }, this);\n};\n_s(BettingForm, \"Wra5XdGZCMNXxFD8FhF6bjz8pcs=\");\n_c = BettingForm;\nexport default BettingForm;\nvar _c;\n$RefreshReg$(_c, \"BettingForm\");","map":{"version":3,"names":["React","useState","Box","Button","FormControl","FormControlLabel","Grid","InputAdornment","MenuItem","Radio","RadioGroup","TextField","Typography","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","CircularProgress","Card","CardContent","Divider","Chip","Tabs","Tab","Avatar","Tooltip","Accordion","AccordionSummary","AccordionDetails","AddIcon","DeleteIcon","SportsIcon","ExpandMoreIcon","SportsSoccerIcon","SportsBasketballIcon","SportsFootballIcon","SportsBaseballIcon","SportsHockeyIcon","PersonIcon","CalculateIcon","jsxDEV","_jsxDEV","initialLeg","team","originalOdds","currentOdds","status","formatOdds","odds","numOdds","parseInt","BettingForm","onSubmit","fetchOdds","fetchEvents","loading","_s","_playersMap$selectedP","formData","setFormData","betType","stake","legs","cashoutOffer","oddsDialogOpen","setOddsDialogOpen","currentLegIndex","setCurrentLegIndex","oddsParams","setOddsParams","sport","markets","fetchingOdds","setFetchingOdds","fetchedEvents","setFetchedEvents","fetchedPlayerProps","setFetchedPlayerProps","errorMessage","setErrorMessage","activeTab","setActiveTab","expandedEvent","setExpandedEvent","selectedEvent","setSelectedEvent","selectedPlayerMarket","setSelectedPlayerMarket","playersMap","setPlayersMap","selectedPlayer","setSelectedPlayer","handleInputChange","e","name","value","target","isNaN","parseFloat","prev","handleLegChange","index","field","updatedLegs","toString","replace","addLeg","removeLeg","splice","length","openOddsDialog","handleOddsParamsChange","fetchCurrentOdds","events","error","message","fetchPlayerProps","eventId","playerPropsParams","response","playerData","bookmakers","forEach","bookmaker","market","key","outcomes","outcome","playerName","description","push","title","bookmakerId","point","price","Object","keys","console","handlePlayerMarketChange","handleTabChange","event","newValue","selectOdds","marketKey","handleSubmit","preventDefault","leg","handleAccordionChange","isExpanded","getSportIcon","includes","fileName","_jsxFileName","lineNumber","columnNumber","sportOptions","label","icon","marketOptions","standard","basketball","baseball","getAvailableMarkets","availableMarkets","handlePlayerSelect","selectPlayerOdds","bookmakerKey","resetPlayerSelection","component","noValidate","children","variant","gutterBottom","sx","color","fontWeight","mb","container","spacing","item","xs","sm","row","onChange","control","disabled","required","fullWidth","type","InputProps","startAdornment","position","inputProps","min","step","mt","map","borderColor","alignItems","display","justifyContent","size","ml","onClick","select","helperText","endAdornment","edge","startIcon","p","bgcolor","borderRadius","px","py","open","onClose","maxWidth","PaperProps","pb","pt","scrollButtons","borderBottom","hidden","SelectProps","renderValue","option","find","opt","width","height","mr","filter","eventIndex","expanded","boxShadow","border","expandIcon","home_team","away_team","Date","commence_time","toLocaleString","bookmakerIndex","marketIndex","outcomeIndex","textTransform","undefined","md","cursor","id","textAlign","prop","_c","$RefreshReg$"],"sources":["C:/Users/smeet/Side Projects/CashoutCalc/frontend/src/components/BettingForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Grid,\r\n  InputAdornment,\r\n  MenuItem,\r\n  Radio,\r\n  RadioGroup,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  CircularProgress,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Chip,\r\n  Tabs,\r\n  Tab,\r\n  Avatar,\r\n  Tooltip,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails\r\n} from '@mui/material';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport SportsIcon from '@mui/icons-material/Sports';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport SportsSoccerIcon from '@mui/icons-material/SportsSoccer';\r\nimport SportsBasketballIcon from '@mui/icons-material/SportsBasketball';\r\nimport SportsFootballIcon from '@mui/icons-material/SportsFootball';\r\nimport SportsBaseballIcon from '@mui/icons-material/SportsBaseball';\r\nimport SportsHockeyIcon from '@mui/icons-material/SportsHockey';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport CalculateIcon from '@mui/icons-material/Calculate';\r\n\r\nconst initialLeg = {\r\n  team: '',\r\n  originalOdds: '',\r\n  currentOdds: '',\r\n  status: 'Pending'\r\n};\r\n\r\n// Format American odds with + sign\r\nconst formatOdds = (odds) => {\r\n  if (!odds) return '';\r\n  \r\n  const numOdds = parseInt(odds);\r\n  return numOdds > 0 ? `+${numOdds}` : `${numOdds}`;\r\n};\r\n\r\nconst BettingForm = ({ onSubmit, fetchOdds, fetchEvents, loading }) => {\r\n  const [formData, setFormData] = useState({\r\n    betType: 'Single',\r\n    stake: '',\r\n    legs: [{ ...initialLeg }],\r\n    cashoutOffer: ''\r\n  });\r\n\r\n  const [oddsDialogOpen, setOddsDialogOpen] = useState(false);\r\n  const [currentLegIndex, setCurrentLegIndex] = useState(0);\r\n  const [oddsParams, setOddsParams] = useState({\r\n    sport: 'americanfootball_nfl',\r\n    markets: 'h2h',\r\n    team: ''\r\n  });\r\n  const [fetchingOdds, setFetchingOdds] = useState(false);\r\n  const [fetchedEvents, setFetchedEvents] = useState([]);\r\n  const [fetchedPlayerProps, setFetchedPlayerProps] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [expandedEvent, setExpandedEvent] = useState(null);\r\n  const [selectedEvent, setSelectedEvent] = useState(null);\r\n  const [selectedPlayerMarket, setSelectedPlayerMarket] = useState('player_points');\r\n  const [playersMap, setPlayersMap] = useState({});\r\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    \r\n    // For numeric fields, ensure we have valid values\r\n    if (name === 'stake' || name === 'cashoutOffer') {\r\n      // Ensure it's a valid number\r\n      if (value && isNaN(parseFloat(value))) {\r\n        return; // Don't update if it's not a valid number\r\n      }\r\n    }\r\n    \r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleLegChange = (index, field, value) => {\r\n    const updatedLegs = [...formData.legs];\r\n    \r\n    // For odds fields, ensure we have valid numeric values\r\n    if (field === 'originalOdds' || field === 'currentOdds') {\r\n      // Remove any + sign for storage (but we'll display it)\r\n      value = value.toString().replace(/^\\+/, '');\r\n      \r\n      // Ensure it's a valid number\r\n      if (value && isNaN(parseInt(value))) {\r\n        return; // Don't update if it's not a valid number\r\n      }\r\n    }\r\n    \r\n    updatedLegs[index] = { ...updatedLegs[index], [field]: value };\r\n    \r\n    // If original odds are set and current odds are not, set current = original\r\n    if (field === 'originalOdds' && !updatedLegs[index].currentOdds) {\r\n      updatedLegs[index].currentOdds = value;\r\n    }\r\n    \r\n    setFormData(prev => ({ ...prev, legs: updatedLegs }));\r\n  };\r\n\r\n  const addLeg = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      betType: 'Parlay', // Automatically switch to parlay if adding legs\r\n      legs: [...prev.legs, { ...initialLeg }]\r\n    }));\r\n  };\r\n\r\n  const removeLeg = (index) => {\r\n    const updatedLegs = [...formData.legs];\r\n    updatedLegs.splice(index, 1);\r\n    \r\n    setFormData(prev => ({\r\n      ...prev,\r\n      legs: updatedLegs\r\n    }));\r\n    \r\n    // If only one leg is left, switch back to single bet type\r\n    if (updatedLegs.length === 1) {\r\n      setFormData(prev => ({ ...prev, betType: 'Single' }));\r\n    }\r\n  };\r\n\r\n  const openOddsDialog = (index) => {\r\n    setCurrentLegIndex(index);\r\n    setOddsParams({\r\n      sport: 'americanfootball_nfl',\r\n      markets: 'h2h',\r\n      team: formData.legs[index].team\r\n    });\r\n    setFetchedEvents([]);\r\n    setFetchedPlayerProps([]);\r\n    setSelectedEvent(null);\r\n    setSelectedPlayerMarket('player_points');\r\n    setErrorMessage('');\r\n    setActiveTab(0);\r\n    setOddsDialogOpen(true);\r\n  };\r\n\r\n  const handleOddsParamsChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setOddsParams(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const fetchCurrentOdds = async () => {\r\n    setFetchingOdds(true);\r\n    setErrorMessage('');\r\n    try {\r\n      if (activeTab === 0) {\r\n        // Fetch regular odds\r\n        const events = await fetchOdds(oddsParams);\r\n        setFetchedEvents(events);\r\n        if (events.length === 0) {\r\n          setErrorMessage('No events found for the specified parameters.');\r\n        }\r\n      } else if (activeTab === 1) {\r\n        // For player props, first fetch available events\r\n        const events = await fetchEvents({ sport: oddsParams.sport });\r\n        setFetchedEvents(events);\r\n        if (events.length === 0) {\r\n          setErrorMessage('No events found for the specified sport.');\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(error.message || 'Failed to fetch odds. Please try again.');\r\n    } finally {\r\n      setFetchingOdds(false);\r\n    }\r\n  };\r\n\r\n  const fetchPlayerProps = async (eventId) => {\r\n    setFetchingOdds(true);\r\n    setErrorMessage('');\r\n    setSelectedPlayer(null);\r\n    setSelectedEvent(eventId);\r\n    \r\n    try {\r\n      const playerPropsParams = {\r\n        sport: oddsParams.sport,\r\n        eventId: eventId,\r\n        markets: selectedPlayerMarket\r\n      };\r\n      \r\n      const response = await fetchOdds(playerPropsParams);\r\n      \r\n      // The response is a single event with bookmakers\r\n      if (response && typeof response === 'object') {\r\n        setFetchedPlayerProps([response]);\r\n        \r\n        // Extract players from the response\r\n        const playerData = {};\r\n        \r\n        // Go through each bookmaker\r\n        if (response.bookmakers && response.bookmakers.length > 0) {\r\n          response.bookmakers.forEach(bookmaker => {\r\n            if (bookmaker.markets && bookmaker.markets.length > 0) {\r\n              bookmaker.markets.forEach(market => {\r\n                if (market.key === selectedPlayerMarket && market.outcomes) {\r\n                  market.outcomes.forEach(outcome => {\r\n                    // The player name is in the description field\r\n                    const playerName = outcome.description;\r\n                    \r\n                    if (!playerData[playerName]) {\r\n                      playerData[playerName] = [];\r\n                    }\r\n                    \r\n                    playerData[playerName].push({\r\n                      bookmaker: bookmaker.title,\r\n                      bookmakerId: bookmaker.key,\r\n                      market: market.key,\r\n                      name: outcome.name,\r\n                      point: outcome.point,\r\n                      price: outcome.price\r\n                    });\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n          \r\n          setPlayersMap(playerData);\r\n          \r\n          if (Object.keys(playerData).length === 0) {\r\n            setErrorMessage('No player props found for this event and market.');\r\n          }\r\n        } else {\r\n          setErrorMessage('No bookmakers available for this event.');\r\n        }\r\n      } else {\r\n        setErrorMessage('Invalid response format from the API.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching player props:', error);\r\n      setErrorMessage(error.message || 'Failed to fetch player props. Please try again.');\r\n    } finally {\r\n      setFetchingOdds(false);\r\n    }\r\n  };\r\n\r\n  const handlePlayerMarketChange = (e) => {\r\n    setSelectedPlayerMarket(e.target.value);\r\n    if (selectedEvent) {\r\n      fetchPlayerProps(selectedEvent);\r\n    }\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n    setFetchedEvents([]);\r\n    setFetchedPlayerProps([]);\r\n    setSelectedEvent(null);\r\n    setErrorMessage('');\r\n  };\r\n\r\n  const selectOdds = (bookmaker, marketKey, outcome) => {\r\n    // Update the leg with the selected odds\r\n    const updatedLegs = [...formData.legs];\r\n    updatedLegs[currentLegIndex] = {\r\n      ...updatedLegs[currentLegIndex],\r\n      currentOdds: outcome.price,\r\n      team: `${outcome.name} (${marketKey === 'h2h' ? 'ML' : marketKey})`\r\n    };\r\n    \r\n    setFormData(prev => ({ ...prev, legs: updatedLegs }));\r\n    setOddsDialogOpen(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validation\r\n    if (!formData.stake || formData.stake <= 0) {\r\n      setErrorMessage('Please enter a valid stake amount.');\r\n      return;\r\n    }\r\n    \r\n    if (!formData.cashoutOffer || formData.cashoutOffer <= 0) {\r\n      setErrorMessage('Please enter a valid cashout offer amount.');\r\n      return;\r\n    }\r\n    \r\n    for (const leg of formData.legs) {\r\n      if (!leg.team) {\r\n        setErrorMessage('Please enter a team/side for all legs.');\r\n        return;\r\n      }\r\n      \r\n      if (!leg.originalOdds) {\r\n        setErrorMessage('Please enter original odds for all legs.');\r\n        return;\r\n      }\r\n      \r\n      if (leg.status === 'Pending' && !leg.currentOdds) {\r\n        setErrorMessage('Please enter current odds for all pending legs.');\r\n        return;\r\n      }\r\n    }\r\n    \r\n    setErrorMessage('');\r\n    onSubmit(formData);\r\n  };\r\n\r\n  const handleAccordionChange = (eventId) => (event, isExpanded) => {\r\n    setExpandedEvent(isExpanded ? eventId : null);\r\n  };\r\n\r\n  const getSportIcon = (sport) => {\r\n    if (sport.includes('football')) return <SportsFootballIcon />;\r\n    if (sport.includes('basketball')) return <SportsBasketballIcon />;\r\n    if (sport.includes('baseball')) return <SportsBaseballIcon />;\r\n    if (sport.includes('hockey')) return <SportsHockeyIcon />;\r\n    if (sport.includes('soccer')) return <SportsSoccerIcon />;\r\n    return <SportsIcon />;\r\n  };\r\n  \r\n  // Sport options with icons\r\n  const sportOptions = [\r\n    { value: 'americanfootball_nfl', label: 'NFL', icon: <SportsFootballIcon /> },\r\n    { value: 'americanfootball_ncaaf', label: 'NCAAF', icon: <SportsFootballIcon /> },\r\n    { value: 'baseball_mlb', label: 'MLB', icon: <SportsBaseballIcon /> },\r\n    { value: 'basketball_nba', label: 'NBA', icon: <SportsBasketballIcon /> },\r\n    { value: 'basketball_ncaab', label: 'NCAAB', icon: <SportsBasketballIcon /> },\r\n    { value: 'icehockey_nhl', label: 'NHL', icon: <SportsHockeyIcon /> },\r\n    { value: 'soccer_epl', label: 'EPL', icon: <SportsSoccerIcon /> },\r\n    { value: 'soccer_usa_mls', label: 'MLS', icon: <SportsSoccerIcon /> }\r\n  ];\r\n\r\n  // Market options by category\r\n  const marketOptions = {\r\n    standard: [\r\n      { value: 'h2h', label: 'Moneyline' },\r\n      { value: 'spreads', label: 'Spreads' },\r\n      { value: 'totals', label: 'Totals (Over/Under)' },\r\n      { value: 'alternate_spreads', label: 'Alternate Spreads' },\r\n      { value: 'alternate_totals', label: 'Alternate Totals' },\r\n      { value: 'team_totals', label: 'Team Totals' },\r\n      { value: 'alternate_team_totals', label: 'Alternate Team Totals' },\r\n      { value: 'outrights', label: 'Outrights' },\r\n      { value: 'h2h_3_way', label: '3-Way Moneyline' },\r\n      { value: 'btts', label: 'Both Teams to Score' },\r\n      { value: 'draw_no_bet', label: 'Draw No Bet' }\r\n    ],\r\n    basketball: [\r\n      { value: 'player_points', label: 'Player Points' },\r\n      { value: 'player_rebounds', label: 'Player Rebounds' },\r\n      { value: 'player_assists', label: 'Player Assists' },\r\n      { value: 'player_threes', label: 'Player Threes' },\r\n      { value: 'player_blocks', label: 'Player Blocks' },\r\n      { value: 'player_steals', label: 'Player Steals' },\r\n      { value: 'player_points_rebounds_assists', label: 'Player PRA' },\r\n      { value: 'player_double_double', label: 'Double Double' },\r\n      { value: 'player_triple_double', label: 'Triple Double' }\r\n    ],\r\n    baseball: [\r\n      { value: 'batter_home_runs', label: 'Batter HRs' },\r\n      { value: 'batter_hits', label: 'Batter Hits' },\r\n      { value: 'batter_total_bases', label: 'Batter Total Bases' },\r\n      { value: 'batter_rbis', label: 'Batter RBIs' },\r\n      { value: 'batter_runs_scored', label: 'Batter Runs' },\r\n      { value: 'pitcher_strikeouts', label: 'Pitcher Strikeouts' },\r\n      { value: 'pitcher_record_a_win', label: 'Pitcher Win' }\r\n    ]\r\n  };\r\n\r\n  // Function to get available markets based on selected sport\r\n  const getAvailableMarkets = () => {\r\n    const availableMarkets = [...marketOptions.standard];\r\n    \r\n    if (oddsParams.sport.includes('basketball')) {\r\n      availableMarkets.push(...marketOptions.basketball);\r\n    }\r\n    \r\n    if (oddsParams.sport.includes('baseball')) {\r\n      availableMarkets.push(...marketOptions.baseball);\r\n    }\r\n    \r\n    return availableMarkets;\r\n  };\r\n\r\n  // Handle player selection\r\n  const handlePlayerSelect = (playerName) => {\r\n    setSelectedPlayer(playerName);\r\n  };\r\n\r\n  // Select player prop odds\r\n  const selectPlayerOdds = (bookmakerKey, market, playerName, outcome) => {\r\n    // Update the leg with the selected player prop odds\r\n    const updatedLegs = [...formData.legs];\r\n    updatedLegs[currentLegIndex] = {\r\n      ...updatedLegs[currentLegIndex],\r\n      currentOdds: outcome.price,\r\n      team: `${playerName} ${outcome.name} ${outcome.point} (${market.replace('_', ' ')})`\r\n    };\r\n    \r\n    setFormData(prev => ({ ...prev, legs: updatedLegs }));\r\n    setOddsDialogOpen(false);\r\n  };\r\n\r\n  // Reset player selection when going back to games\r\n  const resetPlayerSelection = () => {\r\n    setSelectedEvent(null);\r\n    setFetchedPlayerProps([]);\r\n    setPlayersMap({});\r\n    setSelectedPlayer(null);\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} noValidate>\r\n      <Typography variant=\"h5\" gutterBottom sx={{ color: 'primary.main', fontWeight: 'bold' }}>\r\n        Bet Details\r\n      </Typography>\r\n      \r\n      <Card variant=\"outlined\" sx={{ mb: 4 }}>\r\n        <CardContent>\r\n          <Grid container spacing={3}>\r\n            {/* Bet Type */}\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl component=\"fieldset\">\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Bet Type\r\n                </Typography>\r\n                <RadioGroup\r\n                  row\r\n                  name=\"betType\"\r\n                  value={formData.betType}\r\n                  onChange={handleInputChange}\r\n                >\r\n                  <FormControlLabel \r\n                    value=\"Single\" \r\n                    control={<Radio color=\"secondary\" />} \r\n                    label=\"Single\" \r\n                    disabled={formData.legs.length > 1}\r\n                  />\r\n                  <FormControlLabel \r\n                    value=\"Parlay\" \r\n                    control={<Radio color=\"secondary\" />} \r\n                    label=\"Parlay\" \r\n                  />\r\n                </RadioGroup>\r\n              </FormControl>\r\n            </Grid>\r\n            \r\n            {/* Stake */}\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                label=\"Stake\"\r\n                name=\"stake\"\r\n                value={formData.stake}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                type=\"number\"\r\n                InputProps={{\r\n                  startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                  inputProps: { min: 0, step: 0.01 }\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n      \r\n      <Typography variant=\"h6\" sx={{ mt: 4, mb: 2, color: 'primary.dark', fontWeight: 'bold' }}>\r\n        Bet Legs\r\n      </Typography>\r\n      \r\n      {formData.legs.map((leg, index) => (\r\n        <Card \r\n          key={index} \r\n          variant=\"outlined\" \r\n          sx={{ \r\n            mb: 3, \r\n            borderColor: leg.status === 'Hit / Won' ? 'success.light' : \r\n                        leg.status === 'Lost' ? 'error.light' : 'primary.light'\r\n          }}\r\n        >\r\n          <CardContent>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item xs={12}>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                  <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\r\n                    Leg {index + 1}\r\n                    {leg.status === 'Hit / Won' && (\r\n                      <Chip \r\n                        label=\"Won\" \r\n                        color=\"success\" \r\n                        size=\"small\" \r\n                        sx={{ ml: 1 }} \r\n                      />\r\n                    )}\r\n                    {leg.status === 'Lost' && (\r\n                      <Chip \r\n                        label=\"Lost\" \r\n                        color=\"error\" \r\n                        size=\"small\" \r\n                        sx={{ ml: 1 }} \r\n                      />\r\n                    )}\r\n                    {leg.status === 'Pending' && (\r\n                      <Chip \r\n                        label=\"Pending\" \r\n                        color=\"primary\" \r\n                        size=\"small\" \r\n                        sx={{ ml: 1 }} \r\n                      />\r\n                    )}\r\n                  </Typography>\r\n                  {formData.legs.length > 1 && (\r\n                    <IconButton \r\n                      size=\"small\" \r\n                      onClick={() => removeLeg(index)}\r\n                      color=\"error\"\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  )}\r\n                </Box>\r\n              </Grid>\r\n              \r\n              {/* Team */}\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  label=\"Team / Selection\"\r\n                  value={leg.team}\r\n                  onChange={(e) => handleLegChange(index, 'team', e.target.value)}\r\n                  fullWidth\r\n                />\r\n              </Grid>\r\n              \r\n              {/* Status */}\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  select\r\n                  label=\"Status\"\r\n                  value={leg.status}\r\n                  onChange={(e) => handleLegChange(index, 'status', e.target.value)}\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"Pending\">Pending</MenuItem>\r\n                  <MenuItem value=\"Hit / Won\">Hit / Won</MenuItem>\r\n                  <MenuItem value=\"Lost\">Lost</MenuItem>\r\n                </TextField>\r\n              </Grid>\r\n              \r\n              {/* Original Odds */}\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  required\r\n                  label=\"Original Odds\"\r\n                  value={leg.originalOdds}\r\n                  onChange={(e) => handleLegChange(index, 'originalOdds', e.target.value)}\r\n                  InputProps={{\r\n                    startAdornment: leg.originalOdds && parseInt(leg.originalOdds) > 0 ? \r\n                      <InputAdornment position=\"start\">+</InputAdornment> : null,\r\n                    inputProps: { step: 1 }\r\n                  }}\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  helperText=\"Enter in American format (e.g. +200, -150)\"\r\n                />\r\n              </Grid>\r\n              \r\n              {/* Current Odds (only for pending legs) */}\r\n              {leg.status === 'Pending' && (\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    required\r\n                    label=\"Current Odds\"\r\n                    value={leg.currentOdds}\r\n                    onChange={(e) => handleLegChange(index, 'currentOdds', e.target.value)}\r\n                    InputProps={{\r\n                      startAdornment: leg.currentOdds && parseInt(leg.currentOdds) > 0 ? \r\n                        <InputAdornment position=\"start\">+</InputAdornment> : null,\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <Tooltip title=\"Fetch current odds\">\r\n                            <IconButton \r\n                              onClick={() => openOddsDialog(index)}\r\n                              edge=\"end\"\r\n                              color=\"primary\"\r\n                            >\r\n                              <SportsIcon />\r\n                            </IconButton>\r\n                          </Tooltip>\r\n                        </InputAdornment>\r\n                      ),\r\n                      inputProps: { step: 1 }\r\n                    }}\r\n                    fullWidth\r\n                    type=\"number\"\r\n                    helperText=\"Enter manually or fetch from The Odds API\"\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      ))}\r\n      \r\n      <Button\r\n        startIcon={<AddIcon />}\r\n        onClick={addLeg}\r\n        sx={{ mb: 3 }}\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n      >\r\n        Add Leg\r\n      </Button>\r\n      \r\n      <Typography variant=\"h6\" gutterBottom sx={{ mt: 4, color: 'primary.dark', fontWeight: 'bold' }}>\r\n        Cashout Details\r\n      </Typography>\r\n      \r\n      <Card variant=\"outlined\" sx={{ mb: 4 }}>\r\n        <CardContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                required\r\n                label=\"Cashout Offer\"\r\n                name=\"cashoutOffer\"\r\n                value={formData.cashoutOffer}\r\n                onChange={handleInputChange}\r\n                fullWidth\r\n                type=\"number\"\r\n                InputProps={{\r\n                  startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                  inputProps: { min: 0, step: 0.01 }\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n      \r\n      {errorMessage && (\r\n        <Typography color=\"error\" sx={{ mt: 2, mb: 2, p: 2, bgcolor: '#ffebee', borderRadius: 1 }}>\r\n          {errorMessage}\r\n        </Typography>\r\n      )}\r\n      \r\n      <Button\r\n        type=\"submit\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        sx={{ mt: 2, px: 4, py: 1 }}\r\n        disabled={loading}\r\n        startIcon={<CalculateIcon />}\r\n      >\r\n        {loading ? <CircularProgress size={24} /> : 'Calculate EV'}\r\n      </Button>\r\n      \r\n      {/* Odds API Dialog */}\r\n      <Dialog \r\n        open={oddsDialogOpen} \r\n        onClose={() => setOddsDialogOpen(false)} \r\n        maxWidth=\"lg\" \r\n        fullWidth\r\n        PaperProps={{\r\n          sx: { borderRadius: 2 }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ pb: 1, pt: 2, fontWeight: 'bold' }}>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            {getSportIcon(oddsParams.sport)}\r\n            <Typography variant=\"h6\" sx={{ ml: 1 }}>\r\n              Fetch Current Odds\r\n            </Typography>\r\n          </Box>\r\n        </DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n          <Tabs \r\n            value={activeTab}\r\n            onChange={handleTabChange}\r\n            variant=\"scrollable\"\r\n            scrollButtons=\"auto\"\r\n            sx={{ mb: 2, borderBottom: 1, borderColor: 'divider' }}\r\n          >\r\n            <Tab icon={<SportsIcon />} label=\"Game Odds\" />\r\n            <Tab \r\n              icon={<PersonIcon />} \r\n              label=\"Player Props\" \r\n              disabled={!['basketball_nba', 'basketball_ncaab', 'baseball_mlb'].includes(oddsParams.sport)} \r\n            />\r\n          </Tabs>\r\n          \r\n          <Box hidden={activeTab !== 0}>\r\n            <Grid container spacing={2} sx={{ mt: 1 }}>\r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  select\r\n                  label=\"Sport\"\r\n                  name=\"sport\"\r\n                  value={oddsParams.sport}\r\n                  onChange={handleOddsParamsChange}\r\n                  fullWidth\r\n                  SelectProps={{\r\n                    renderValue: (value) => {\r\n                      const option = sportOptions.find(opt => opt.value === value);\r\n                      return (\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <Avatar sx={{ width: 24, height: 24, mr: 1, bgcolor: 'primary.main' }}>\r\n                            {option?.icon}\r\n                          </Avatar>\r\n                          {option?.label}\r\n                        </Box>\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  {sportOptions.map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar sx={{ width: 24, height: 24, mr: 1, bgcolor: 'primary.main' }}>\r\n                          {option.icon}\r\n                        </Avatar>\r\n                        {option.label}\r\n                      </Box>\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  select\r\n                  label=\"Market\"\r\n                  name=\"markets\"\r\n                  value={oddsParams.markets}\r\n                  onChange={handleOddsParamsChange}\r\n                  fullWidth\r\n                >\r\n                  {getAvailableMarkets().filter(market => !market.value.includes('player_')).map((market) => (\r\n                    <MenuItem key={market.value} value={market.value}>\r\n                      {market.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} sm={4}>\r\n                <TextField\r\n                  label=\"Team (Optional)\"\r\n                  name=\"team\"\r\n                  value={oddsParams.team}\r\n                  onChange={handleOddsParamsChange}\r\n                  fullWidth\r\n                  helperText=\"Leave blank to see all events\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            \r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={fetchCurrentOdds}\r\n              disabled={fetchingOdds}\r\n              color=\"secondary\"\r\n              sx={{ mt: 3 }}\r\n            >\r\n              {fetchingOdds ? <CircularProgress size={24} /> : 'Fetch Odds'}\r\n            </Button>\r\n            \r\n            {errorMessage && (\r\n              <Typography color=\"error\" sx={{ mt: 2 }}>\r\n                {errorMessage}\r\n              </Typography>\r\n            )}\r\n            \r\n            {fetchedEvents.length > 0 && (\r\n              <Box sx={{ mt: 4 }}>\r\n                <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.dark' }}>\r\n                  Available Events ({fetchedEvents.length})\r\n                </Typography>\r\n                \r\n                {fetchedEvents.map((event, eventIndex) => (\r\n                  <Accordion \r\n                    key={eventIndex} \r\n                    expanded={expandedEvent === eventIndex}\r\n                    onChange={handleAccordionChange(eventIndex)}\r\n                    sx={{ mb: 2, boxShadow: 'none', border: '1px solid', borderColor: 'divider' }}\r\n                  >\r\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                      <Grid container alignItems=\"center\">\r\n                        <Grid item xs={8}>\r\n                          <Typography variant=\"subtitle1\" sx={{ fontWeight: 'medium' }}>\r\n                            {event.home_team} vs {event.away_team}\r\n                          </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={4}>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {new Date(event.commence_time).toLocaleString()}\r\n                          </Typography>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Divider sx={{ mb: 2 }} />\r\n                      \r\n                      {event.bookmakers && event.bookmakers.map((bookmaker, bookmakerIndex) => (\r\n                        <Box key={bookmakerIndex} sx={{ mb: 3 }}>\r\n                          <Typography variant=\"subtitle2\" sx={{ mb: 1, fontWeight: 'bold' }}>\r\n                            {bookmaker.title}\r\n                          </Typography>\r\n                          \r\n                          {bookmaker.markets && bookmaker.markets.map((market, marketIndex) => (\r\n                            <Card key={marketIndex} variant=\"outlined\" sx={{ mb: 2, borderColor: 'primary.light' }}>\r\n                              <CardContent sx={{ p: 2, '&:last-child': { pb: 2 } }}>\r\n                                <Typography variant=\"body2\" gutterBottom sx={{ fontWeight: 'medium', color: 'primary.main' }}>\r\n                                  {market.key === 'h2h' ? 'Moneyline' : \r\n                                   market.key === 'spreads' ? 'Spread' : \r\n                                   market.key === 'totals' ? 'Total (Over/Under)' : \r\n                                   market.key}\r\n                                </Typography>\r\n                                \r\n                                <Grid container spacing={1}>\r\n                                  {market.outcomes.map((outcome, outcomeIndex) => (\r\n                                    <Grid item key={outcomeIndex}>\r\n                                      <Button\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        onClick={() => selectOdds(bookmaker.key, market.key, outcome)}\r\n                                        sx={{ \r\n                                          borderRadius: '20px',\r\n                                          textTransform: 'none',\r\n                                          fontWeight: 'medium' \r\n                                        }}\r\n                                      >\r\n                                        {outcome.name} \r\n                                        {outcome.point !== undefined ? ` ${outcome.point > 0 ? '+' : ''}${outcome.point}` : ''}: \r\n                                        {' '}{formatOdds(outcome.price)}\r\n                                      </Button>\r\n                                    </Grid>\r\n                                  ))}\r\n                                </Grid>\r\n                              </CardContent>\r\n                            </Card>\r\n                          ))}\r\n                        </Box>\r\n                      ))}\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                ))}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          \r\n          <Box hidden={activeTab !== 1}>\r\n            <Grid container spacing={2} sx={{ mt: 1 }}>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  select\r\n                  label=\"Sport\"\r\n                  name=\"sport\"\r\n                  value={oddsParams.sport}\r\n                  onChange={handleOddsParamsChange}\r\n                  fullWidth\r\n                  SelectProps={{\r\n                    renderValue: (value) => {\r\n                      const option = sportOptions.find(opt => opt.value === value);\r\n                      return (\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <Avatar sx={{ width: 24, height: 24, mr: 1, bgcolor: 'primary.main' }}>\r\n                            {option?.icon}\r\n                          </Avatar>\r\n                          {option?.label}\r\n                        </Box>\r\n                      );\r\n                    }\r\n                  }}\r\n                >\r\n                  {sportOptions.filter(opt => \r\n                    ['basketball_nba', 'basketball_ncaab', 'baseball_mlb'].includes(opt.value)\r\n                  ).map((option) => (\r\n                    <MenuItem key={option.value} value={option.value}>\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar sx={{ width: 24, height: 24, mr: 1, bgcolor: 'primary.main' }}>\r\n                          {option.icon}\r\n                        </Avatar>\r\n                        {option.label}\r\n                      </Box>\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n              \r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  select\r\n                  label=\"Player Prop Market\"\r\n                  value={selectedPlayerMarket}\r\n                  onChange={handlePlayerMarketChange}\r\n                  fullWidth\r\n                  disabled={!selectedEvent}\r\n                >\r\n                  {getAvailableMarkets().filter(market => market.value.includes('player_')).map((market) => (\r\n                    <MenuItem key={market.value} value={market.value}>\r\n                      {market.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Grid>\r\n            </Grid>\r\n            \r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={fetchCurrentOdds}\r\n              disabled={fetchingOdds || selectedEvent !== null}\r\n              color=\"secondary\"\r\n              sx={{ mt: 3 }}\r\n            >\r\n              {fetchingOdds ? <CircularProgress size={24} /> : 'Fetch Games'}\r\n            </Button>\r\n            \r\n            {selectedEvent && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={resetPlayerSelection}\r\n                sx={{ mt: 3, ml: 2 }}\r\n              >\r\n                Back to Games\r\n              </Button>\r\n            )}\r\n            \r\n            {errorMessage && (\r\n              <Typography color=\"error\" sx={{ mt: 2 }}>\r\n                {errorMessage}\r\n              </Typography>\r\n            )}\r\n            \r\n            {fetchedEvents.length > 0 && !selectedEvent && (\r\n              <Box sx={{ mt: 4 }}>\r\n                <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.dark' }}>\r\n                  Select a Game to View Player Props\r\n                </Typography>\r\n                \r\n                <Grid container spacing={2}>\r\n                  {fetchedEvents.map((event) => (\r\n                    <Grid item xs={12} md={6} key={event.id}>\r\n                      <Card \r\n                        variant=\"outlined\" \r\n                        sx={{ \r\n                          cursor: 'pointer',\r\n                          '&:hover': { borderColor: 'primary.main', boxShadow: 1 }\r\n                        }}\r\n                        onClick={() => fetchPlayerProps(event.id)}\r\n                      >\r\n                        <CardContent>\r\n                          <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold' }}>\r\n                            {event.home_team} vs {event.away_team}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {new Date(event.commence_time).toLocaleString()}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Box>\r\n            )}\r\n            \r\n            {fetchedPlayerProps.length > 0 && selectedEvent && !selectedPlayer && (\r\n              <Box sx={{ mt: 4 }}>\r\n                <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: 'primary.dark' }}>\r\n                  Select a Player for {selectedPlayerMarket.replace('_', ' ')}\r\n                </Typography>\r\n                \r\n                <Grid container spacing={2}>\r\n                  {Object.keys(playersMap).map((playerName, index) => (\r\n                    <Grid item xs={12} md={4} key={index}>\r\n                      <Card \r\n                        variant=\"outlined\" \r\n                        sx={{ \r\n                          cursor: 'pointer',\r\n                          '&:hover': { borderColor: 'primary.main', boxShadow: 1 }\r\n                        }}\r\n                        onClick={() => handlePlayerSelect(playerName)}\r\n                      >\r\n                        <CardContent>\r\n                          <Typography variant=\"subtitle1\" sx={{ fontWeight: 'bold', textAlign: 'center' }}>\r\n                            {playerName}\r\n                          </Typography>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Box>\r\n            )}\r\n            \r\n            {selectedPlayer && selectedEvent && (\r\n              <Box sx={{ mt: 4 }}>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ mb: 2 }}>\r\n                  <Typography variant=\"h6\" sx={{ fontWeight: 'bold', color: 'primary.dark' }}>\r\n                    {selectedPlayer} - {selectedPlayerMarket.replace('_', ' ')}\r\n                  </Typography>\r\n                  \r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    onClick={() => setSelectedPlayer(null)}\r\n                  >\r\n                    Back to Players\r\n                  </Button>\r\n                </Box>\r\n                \r\n                <Grid container spacing={2}>\r\n                  {playersMap[selectedPlayer]?.map((prop, index) => (\r\n                    <Grid item xs={12} md={6} key={index}>\r\n                      <Card variant=\"outlined\">\r\n                        <CardContent>\r\n                          <Typography variant=\"subtitle2\" sx={{ mb: 1, fontWeight: 'bold' }}>\r\n                            {prop.bookmaker}\r\n                          </Typography>\r\n                          \r\n                          <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              onClick={() => selectPlayerOdds(\r\n                                prop.bookmakerId, \r\n                                selectedPlayerMarket, \r\n                                selectedPlayer, \r\n                                {\r\n                                  name: prop.name,\r\n                                  point: prop.point,\r\n                                  price: prop.price\r\n                                }\r\n                              )}\r\n                              sx={{ \r\n                                mr: 2,\r\n                                borderRadius: '20px',\r\n                                textTransform: 'none',\r\n                                fontWeight: 'medium'\r\n                              }}\r\n                            >\r\n                              {prop.name} {prop.point}: {formatOdds(prop.price)}\r\n                            </Button>\r\n                          </Box>\r\n                        </CardContent>\r\n                      </Card>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Box>\r\n            )}\r\n            \r\n            {selectedEvent && (\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={resetPlayerSelection}\r\n                sx={{ mt: 3, ml: 2 }}\r\n              >\r\n                Back to Games\r\n              </Button>\r\n            )}\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 2 }}>\r\n          <Button \r\n            onClick={() => setOddsDialogOpen(false)}\r\n            variant=\"outlined\"\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BettingForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}